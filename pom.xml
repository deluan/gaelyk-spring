<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.deluan.gaelyk</groupId>
	<artifactId>gaelyk-spring</artifactId>
	<version>1</version>
	<packaging>war</packaging>

    <description>Gaelyk Template Project</description>

	<properties>
		<gaelyk.version>0.5.5</gaelyk.version>
		<groovy.version>1.7.5</groovy.version> 
		<gmaven.version>1.3</gmaven.version>
		<gae.version>1.3.7</gae.version>  
		<gaeplugin.version>0.7.1</gaeplugin.version>
        <spring.version>3.0.4.RELEASE</spring.version>
    </properties>

	<dependencies>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${gae.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${gae.version}</version>
		</dependency>
		<dependency>
			<groupId>groovyx.gaelyk</groupId>
			<artifactId>gaelyk</artifactId>
			<version>${gaelyk.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy.version}</version>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>${gaeplugin.version}</version>
				<!--  For new users to have the appengine sdk automatically installed. -->
                <executions> 
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                    </execution>
                </executions>
			</plugin>
            <!-- Java compiler version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0</version>
                <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>${gmaven.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>generateStubs</goal>
							<goal>compile</goal>
							<goal>generateTestStubs</goal>
							<goal>testCompile</goal>
						</goals>
                        <configuration>
 							<providerSelection>1.7</providerSelection>
                        </configuration>						
					</execution>
				</executions>
			</plugin>			
		</plugins>
	</build>
	<repositories>
		<!-- 
			Maven Hack to force maven to check central first. Otherwise you will get a bunch
			of "Unable to find resource" messages.  The trailing slash at the end is the hack.
			Otherwise, maven will ignore this definition all together and just use central last.
			Do not change the id to central, otherwise it will be ignored.
		-->
		<repository> 
			<id>central2</id>
			<name>check central first to avoid a lot of not found warnings</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>	
		<repository>
			<id>maven-gaelyk-repo</id>
			<name>maven-gaelyk repository</name>
			<url>http://maven-gaelyk.googlecode.com/svn/repository</url>
		</repository>
	</repositories>
</project>